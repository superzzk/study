<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzk.order.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.zzk.order.entity.Product" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="product_code" property="productCode" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_line" property="productLine" jdbcType="VARCHAR" />
    <result column="product_scale" property="productScale" jdbcType="VARCHAR" />
    <result column="product_vendor" property="productVendor" jdbcType="VARCHAR" />
    <result column="quantity_in_stock" property="quantityInStock" jdbcType="INTEGER" />
    <result column="buy_price" property="buyPrice" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zzk.order.entity.Product" extends="BaseResultMap" >
    <result column="product_description" property="productDescription" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, product_code, product_name, product_line, product_scale, product_vendor, quantity_in_stock, 
    buy_price
  </sql>
  <sql id="Blob_Column_List" >
    product_description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zzk.order.entity.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zzk.order.entity.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from products
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from products
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zzk.order.entity.Product" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into products (product_code, product_name, product_line, 
      product_scale, product_vendor, quantity_in_stock, 
      buy_price, product_description)
    values (#{productCode,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{productLine,jdbcType=VARCHAR}, 
      #{productScale,jdbcType=VARCHAR}, #{productVendor,jdbcType=VARCHAR}, #{quantityInStock,jdbcType=INTEGER}, 
      #{buyPrice,jdbcType=DECIMAL}, #{productDescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzk.order.entity.Product" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into products
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productCode != null" >
        product_code,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productLine != null" >
        product_line,
      </if>
      <if test="productScale != null" >
        product_scale,
      </if>
      <if test="productVendor != null" >
        product_vendor,
      </if>
      <if test="quantityInStock != null" >
        quantity_in_stock,
      </if>
      <if test="buyPrice != null" >
        buy_price,
      </if>
      <if test="productDescription != null" >
        product_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productCode != null" >
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productLine != null" >
        #{productLine,jdbcType=VARCHAR},
      </if>
      <if test="productScale != null" >
        #{productScale,jdbcType=VARCHAR},
      </if>
      <if test="productVendor != null" >
        #{productVendor,jdbcType=VARCHAR},
      </if>
      <if test="quantityInStock != null" >
        #{quantityInStock,jdbcType=INTEGER},
      </if>
      <if test="buyPrice != null" >
        #{buyPrice,jdbcType=DECIMAL},
      </if>
      <if test="productDescription != null" >
        #{productDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzk.order.entity.ProductExample" resultType="java.lang.Integer" >
    select count(*) from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzk.order.entity.Product" >
    update products
    <set >
      <if test="productCode != null" >
        product_code = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productLine != null" >
        product_line = #{productLine,jdbcType=VARCHAR},
      </if>
      <if test="productScale != null" >
        product_scale = #{productScale,jdbcType=VARCHAR},
      </if>
      <if test="productVendor != null" >
        product_vendor = #{productVendor,jdbcType=VARCHAR},
      </if>
      <if test="quantityInStock != null" >
        quantity_in_stock = #{quantityInStock,jdbcType=INTEGER},
      </if>
      <if test="buyPrice != null" >
        buy_price = #{buyPrice,jdbcType=DECIMAL},
      </if>
      <if test="productDescription != null" >
        product_description = #{productDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zzk.order.entity.Product" >
    update products
    set product_code = #{productCode,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_line = #{productLine,jdbcType=VARCHAR},
      product_scale = #{productScale,jdbcType=VARCHAR},
      product_vendor = #{productVendor,jdbcType=VARCHAR},
      quantity_in_stock = #{quantityInStock,jdbcType=INTEGER},
      buy_price = #{buyPrice,jdbcType=DECIMAL},
      product_description = #{productDescription,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzk.order.entity.Product" >
    update products
    set product_code = #{productCode,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_line = #{productLine,jdbcType=VARCHAR},
      product_scale = #{productScale,jdbcType=VARCHAR},
      product_vendor = #{productVendor,jdbcType=VARCHAR},
      quantity_in_stock = #{quantityInStock,jdbcType=INTEGER},
      buy_price = #{buyPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select resultMap="ResultMapWithBLOBs" parameterType="com.zzk.order.entity.ProductExample" id="selectByExampleWithBLOBsWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select resultMap="BaseResultMap" parameterType="com.zzk.order.entity.ProductExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>