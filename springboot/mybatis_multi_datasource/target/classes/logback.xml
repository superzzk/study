<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <property name="log.path" value="/home/data/logs"/>
    <!--控制台输出 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--
        日志输出格式：%d表示日期时间，%thread表示线程名，%-5level：级别从左显示5个字符宽度
        %logger{50} 表示logger名字最长50个字符，否则按照句点分割。 %msg：日志消息，%n是换行符
        -->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
        </layout>
    </appender>


    <!--
      logger主要用于存放日志对象，也可以定义日志类型、级别
      name：表示匹配的logger类型前缀，也就是包的前半部分
      level：要记录的日志级别，包括 TRACE < DEBUG < INFO < WARN < ERROR
      additivity：作用在于children-logger是否使用 rootLogger配置的appender进行输出，
            false：表示只用当前logger的appender-ref，
            true：表示当前logger的appender-ref和rootLogger的appender-ref都有效
    -->

    <!--myibatis log configure-->
    <logger name="com.apache.ibatis" level="info" />
    <logger name="java.sql.Connection" level="info"/>
    <logger name="java.sql.Statement" level="info"/>
    <logger name="java.sql.PreparedStatement" level="info"/>
    <logger name="com.think.test1.dao" level="debug"/>
    <logger name="com.think.service" level="debug"/>


    <!--
      root与logger是父子关系，没有特别定义则默认为root，任何一个类只会和一个logger对应，
      要么是定义的logger，要么是root，判断的关键在于找到这个logger，然后判断这个logger的appender和level。
    -->
    <root>
        <level value="info" />
        <appender-ref ref="console" />
    </root>

</configuration>   
